use std::io;
use std::cmp::Ordering;
use rand::Rng;

fn main() {
    println!("Guessing Game");
    println!("Hey user we are going to play a guessing game are you exited, lets hop in on the fun.");
    loop {
        let secret_number = rand::thread_rng().gen_range(1..=100);

        let mut user_guess = String::new();

        println!("Please input your number");
        io::stdin()
            .read_line(&mut user_guess)
            .expect("Failed, please re run the program");

        let user_guess: u32 = match user_guess.trim().parse() {
            Ok(num) => num,
            Err(er) => {
                println!("Please retry : Invalid input due to : {}", er);
                continue
            }
        };

        println!("Your guess is {}", user_guess);
        println!("The secret number generated by game is {secret_number}");
        match user_guess.cmp(&secret_number) {
            Ordering::Less => println!("Too small!"),
            Ordering::Greater => println!("Too big!"),
            Ordering::Equal => {
                println!("Hey you won!");
                break;
            }
        };
    }
}